generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("FEATURE_FLAGS_DATABASE_URL")
}

model FeatureFlagProject {
  id           String                   @id @default(nanoid())
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @default(now())
  clientId     String
  name         String
  environments FeatureFlagEnvironment[]
}

model FeatureFlagEnvironment {
  id        String              @id @default(nanoid())
  createdAt DateTime            @default(now())
  updatedAt DateTime            @default(now())
  projectId String
  projects  FeatureFlagProject? @relation(fields: [projectId], references: [id])
  name      String
  apiKey    String
}

model FeatureFlag {
  id                   String                 @id @default(nanoid())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @default(now())
  key                  String
  description          String
  isEnabledGlobally    Boolean
  userSegmentOverrides UserSegmentOverrides[]
  apiKey               String
}

model UserSegment {
  id                     String                @id @default(nanoid())
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @default(now())
  emails                 String[]
  userSegmentOverrides   UserSegmentOverrides? @relation(fields: [userSegmentOverridesId], references: [id])
  userSegmentOverridesId String?
}

model UserSegmentOverrides {
  id                     String        @id @default(nanoid())
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @default(now())
  userSegments           UserSegment[]
  isEnabledOverrideValue Boolean
  featureFlag            FeatureFlag?  @relation(fields: [featureFlagId], references: [id])
  featureFlagId          String?
}

model ClientSideIdentity {
  id        String   @id @default(nanoid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  email     String
  traits    Json
}
