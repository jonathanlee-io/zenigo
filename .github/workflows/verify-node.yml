name: CI/CD Node.js

on:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
        target-project: [nest, ui]
    name: Lint ${{ matrix.target-project }} (Node.js v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: yarn install --frozen-lockfile
        working-directory: ./${{ matrix.target-project }}
      - name: Lint ${{ matrix.target-project }} (v${{ matrix.node-version }})
        working-directory: ./${{ matrix.target-project }}
        run: yarn run lint

  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x]
        target-project: [nest, ui]
    name: Build ${{ matrix.target-project }} (Node.js v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: yarn install --frozen-lockfile
        working-directory: ./${{ matrix.target-project }}
      - name: Build ${{ matrix.target-project }} (v${{ matrix.node-version }})
        working-directory: ./${{ matrix.target-project }}
        run: yarn run build

  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [22.x]
        target-project: [nest]
    name: Test ${{ matrix.target-project }} (v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - run: yarn install --frozen-lockfile
        working-directory: ./${{ matrix.target-project }}
      - name: Test ${{ matrix.target-project }} (v${{ matrix.node-version }})
        working-directory: ./${{ matrix.target-project }}
        run: yarn run test
        env:
          FEATURE_FLAGS_DATABASE_URL: ${{ secrets.FEATURE_FLAGS_DATABASE_URL }}
          FEEDBACK_DATABASE_URL: ${{ secrets.FEEDBACK_DATABASE_URL }}
          IDENTITY_DATABASE_URL: ${{ secrets.IDENTITY_DATABASE_URL }}
          PAYMENTS_DATABASE_URL: ${{ secrets.PAYMENTS_DATABASE_URL }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          RABBIT_MQ_URLS: ${{ secrets.RABBIT_MQ_URLS }}
          RABBIT_MQ_FEATURE_FLAGS_QUEUE: FEATURE_FLAGS
          RABBIT_MQ_FEEDBACK_QUEUE: FEEDBACK
          RABBIT_MQ_IDENTITY_QUEUE: IDENTITY
          RABBIT_MQ_PAYMENTS_QUEUE: PAYMENTS

  deploy-railway-api:
    name: Deploy Node.js API to Railway
    needs:
      - lint
      - build
#      - test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target-service: [nest-gateway, feature-flags-service, feedback-service, identity-service, payments-service]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install Railway
        run: npm i -g @railway/cli
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Set Production Environment Variables
        run: |
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_PRODUCTION_TOKEN }}" >> $GITHUB_ENV
      - if: ${{ github.ref == 'refs/heads/staging' }}
        name: Set Staging Environment Variables
        run: |
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_STAGING_TOKEN }}" >> $GITHUB_ENV
      - name: Deploy ${{ matrix.target-service }}
        run: |
          max_attempts=10
          attempt=1
          retry_delay=5
          
          until railway up --service ${{ matrix.target-service }}; do
            exit_code=$?
          
            if [ $attempt -ge $max_attempts ]; then
              echo "Deployment failed after $max_attempts attempts. Exiting with error code $exit_code."
              exit $exit_code
            fi
          
            attempt=$((attempt + 1))
            echo "Attempt $attempt/$max_attempts failed. Retrying in ${retry_delay}s..."
            sleep $retry_delay
          
            # Exponential backoff with a cap
            retry_delay=$((retry_delay * 2))
            if [ $retry_delay -gt 60 ]; then
              retry_delay=60
            fi
          done

  deploy-railway-ui:
    name: Deploy UI to Railway
    needs:
      - lint
      - build
    #      - test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target-service: [ui]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install Railway
        run: npm i -g @railway/cli
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Set Production Environment Variables
        run: |
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_PRODUCTION_TOKEN }}" >> $GITHUB_ENV
      - if: ${{ github.ref == 'refs/heads/staging' }}
        name: Set Staging Environment Variables
        run: |
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_STAGING_TOKEN }}" >> $GITHUB_ENV
      - name: Deploy ${{ matrix.target-service }}
        run: |
          max_attempts=10
          attempt=1
          retry_delay=5
          
          until railway up --service ${{ matrix.target-service }}; do
            exit_code=$?
          
            if [ $attempt -ge $max_attempts ]; then
              echo "Deployment failed after $max_attempts attempts. Exiting with error code $exit_code."
              exit $exit_code
            fi
          
            attempt=$((attempt + 1))
            echo "Attempt $attempt/$max_attempts failed. Retrying in ${retry_delay}s..."
            sleep $retry_delay
          
            # Exponential backoff with a cap
            retry_delay=$((retry_delay * 2))
            if [ $retry_delay -gt 60 ]; then
              retry_delay=60
            fi
          done

  cypress-run:
    needs: [deploy-railway-api, deploy-railway-ui]
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 22.x ]
    name: Cypress Run E2E (Node.js v${{ matrix.node-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_BASE_URL: https://www.zenigo.io
